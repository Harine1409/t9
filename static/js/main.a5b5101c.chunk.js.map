{"version":3,"sources":["crud.js","App.js","reportWebVitals.js","index.js"],"names":["x","Crudfunction","useState","user","setuser","userId","setuserId","title","settitle","body","setbody","setid","saveInProgress","setsaveInProgress","useEffect","a","axios","get","response","data","handleSubmit","e","preventDefault","updateData","alert","createData","post","user1","push","put","id","index","findIndex","row","handleDelete","delete","filter","onSubmit","type","name","value","onChange","target","disabled","map","onClick","selectedData","onPopulateData","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5b5101c.chunk.js","sourcesContent":["import React, {useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nvar x =0;\r\nexport default function Crudfunction (){\r\n    const [user,setuser]=useState([]);\r\n    const [userId,setuserId]=useState('');\r\n    const [title,settitle]=useState('');\r\n    const [body,setbody]=useState('');\r\n    const [id,setid]=useState('');\r\n    const [saveInProgress,setsaveInProgress]=useState(false);\r\n   \r\n     useEffect(async()=>{\r\n        var response = await axios.get(\r\n          'https://jsonplaceholder.typicode.com/posts'\r\n        );\r\n        await setuser( response.data );\r\n      },[])\r\n    const handleSubmit= async(e)=>{\r\n        e.preventDefault();\r\n        if(x){\r\n            updateData();\r\n            alert('data has been updated');\r\n        }else{\r\n            createData();\r\n            alert('New data has been created');\r\n        }  \r\n    }\r\n\r\n    const createData = async () => {\r\n        setsaveInProgress(true);\r\n        var response = await axios.post(\r\n          'https://jsonplaceholder.typicode.com/posts',\r\n          {\r\n            userId:userId,\r\n            title: title,\r\n            body:body,\r\n          }\r\n        );\r\n        var user1 = [...user];\r\n        user1.push(response.data);\r\n        setuser(user1);\r\n        setuserId('');\r\n        setbody('');\r\n        settitle('');\r\n        setsaveInProgress(false);\r\n      };\r\n\r\n    const updateData = async () => {\r\n        var response = await axios.put(\r\n          `https://jsonplaceholder.typicode.com/posts/${x}`,\r\n          {\r\n            id:x,\r\n            userId: userId,\r\n            title: title,\r\n            body: body,\r\n          }\r\n        );\r\n        var index = user.findIndex((row) => row.id === x);\r\n        var user1 = [...user];\r\n        user1[index] = response.data;\r\n        setuser(user1);\r\n        setuserId('');\r\n        setbody('');\r\n        settitle('');\r\n        setid('');\r\n      };\r\n    const onPopulateData = (id) => {\r\n        var selectedData = user.filter((row) => row.id === id)[0];\r\n        x=id;\r\n        setuserId(selectedData.userId);\r\n        setbody(selectedData.body);\r\n        settitle(selectedData.title);\r\n      };\r\n    const handleDelete = async (id) => {\r\n        var response = await axios.delete(\r\n          `https://jsonplaceholder.typicode.com/posts/${id}`\r\n        );\r\n        var user1 = user.filter((row) => row.id !== id);\r\n        setuser(user1);\r\n        alert('data has been deleted');\r\n      };\r\n    return (\r\n        <>\r\n          <h3> User Form</h3>\r\n          <form onSubmit={handleSubmit}>\r\n            <div>\r\n              <label> UserId </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"userId\"\r\n                value={userId}\r\n                onChange={(e) => setuserId(e.target.value)}\r\n              />\r\n            </div>{' '}\r\n            <br />\r\n            <div>\r\n              <label> Title </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={title}\r\n                onChange={(e) => settitle(e.target.value)}\r\n              />\r\n            </div>{' '}\r\n            <br />\r\n            <div>\r\n              <label> Body </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"body\"\r\n                value={body}\r\n                onChange={(e) => setbody(e.target.value)}\r\n              />\r\n            </div>{' '}\r\n            <br />\r\n            <button disabled={saveInProgress}> Submit </button>\r\n          </form>\r\n          <h3> Post Data </h3>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <td> UserId </td>\r\n                <td> Title </td>\r\n                <td> Body </td>\r\n                <td> Actions </td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {user.map((data) => (\r\n                <tr key={data.id}>\r\n                  <td> {data.userId} </td>\r\n                  <td> {data.title} </td>\r\n                  <td> {data.body} </td>\r\n                  <td>\r\n                    <button  onClick={() => onPopulateData(data.id)} >\r\n                      {' '}\r\n                      Update{' '}\r\n                    </button>{' '}\r\n                    &nbsp;&nbsp;\r\n                    <button onClick={() => handleDelete(data.id)}>\r\n                      {' '}\r\n                      Delete{' '}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </>\r\n      );\r\n}\r\n","import CrudComponent from './crud';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CrudComponent/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}